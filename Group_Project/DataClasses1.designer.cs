#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Group_Project
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Group_Database")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertProduct_Size(Product_Size instance);
    partial void UpdateProduct_Size(Product_Size instance);
    partial void DeleteProduct_Size(Product_Size instance);
    partial void InsertSize_Table(Size_Table instance);
    partial void UpdateSize_Table(Size_Table instance);
    partial void DeleteSize_Table(Size_Table instance);
    partial void InsertCustom_Product(Custom_Product instance);
    partial void UpdateCustom_Product(Custom_Product instance);
    partial void DeleteCustom_Product(Custom_Product instance);
    partial void InsertDonation(Donation instance);
    partial void UpdateDonation(Donation instance);
    partial void DeleteDonation(Donation instance);
    partial void InsertOrder_Item(Order_Item instance);
    partial void UpdateOrder_Item(Order_Item instance);
    partial void DeleteOrder_Item(Order_Item instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertMask_Type(Mask_Type instance);
    partial void UpdateMask_Type(Mask_Type instance);
    partial void DeleteMask_Type(Mask_Type instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertOrder_Table(Order_Table instance);
    partial void UpdateOrder_Table(Order_Table instance);
    partial void DeleteOrder_Table(Order_Table instance);
    partial void InsertDelivery(Delivery instance);
    partial void UpdateDelivery(Delivery instance);
    partial void DeleteDelivery(Delivery instance);
    partial void InsertUser_Table(User_Table instance);
    partial void UpdateUser_Table(User_Table instance);
    partial void DeleteUser_Table(User_Table instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Group_DatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Product_Size> Product_Sizes
		{
			get
			{
				return this.GetTable<Product_Size>();
			}
		}
		
		public System.Data.Linq.Table<Size_Table> Size_Tables
		{
			get
			{
				return this.GetTable<Size_Table>();
			}
		}
		
		public System.Data.Linq.Table<Custom_Product> Custom_Products
		{
			get
			{
				return this.GetTable<Custom_Product>();
			}
		}
		
		public System.Data.Linq.Table<Donation> Donations
		{
			get
			{
				return this.GetTable<Donation>();
			}
		}
		
		public System.Data.Linq.Table<Order_Item> Order_Items
		{
			get
			{
				return this.GetTable<Order_Item>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<Mask_Type> Mask_Types
		{
			get
			{
				return this.GetTable<Mask_Type>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Order_Table> Order_Tables
		{
			get
			{
				return this.GetTable<Order_Table>();
			}
		}
		
		public System.Data.Linq.Table<Delivery> Deliveries
		{
			get
			{
				return this.GetTable<Delivery>();
			}
		}
		
		public System.Data.Linq.Table<User_Table> User_Tables
		{
			get
			{
				return this.GetTable<User_Table>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private string _Surname;
		
		private EntitySet<Mask_Type> _Mask_Types;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    #endregion
		
		public Admin()
		{
			this._Mask_Types = new EntitySet<Mask_Type>(new Action<Mask_Type>(this.attach_Mask_Types), new Action<Mask_Type>(this.detach_Mask_Types));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Mask_Type", Storage="_Mask_Types", ThisKey="User_Id", OtherKey="Admin_User_Id")]
		public EntitySet<Mask_Type> Mask_Types
		{
			get
			{
				return this._Mask_Types;
			}
			set
			{
				this._Mask_Types.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Product", Storage="_Products", ThisKey="User_Id", OtherKey="Admin_User_Id")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mask_Types(Mask_Type entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_Mask_Types(Mask_Type entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private string _Business_Type;
		
		private EntitySet<Feedback> _Feedbacks;
		
		private EntitySet<Order_Table> _Order_Tables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnBusiness_TypeChanging(string value);
    partial void OnBusiness_TypeChanged();
    #endregion
		
		public Client()
		{
			this._Feedbacks = new EntitySet<Feedback>(new Action<Feedback>(this.attach_Feedbacks), new Action<Feedback>(this.detach_Feedbacks));
			this._Order_Tables = new EntitySet<Order_Table>(new Action<Order_Table>(this.attach_Order_Tables), new Action<Order_Table>(this.detach_Order_Tables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business_Type", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Business_Type
		{
			get
			{
				return this._Business_Type;
			}
			set
			{
				if ((this._Business_Type != value))
				{
					this.OnBusiness_TypeChanging(value);
					this.SendPropertyChanging();
					this._Business_Type = value;
					this.SendPropertyChanged("Business_Type");
					this.OnBusiness_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Feedback", Storage="_Feedbacks", ThisKey="User_Id", OtherKey="Client_User_Id")]
		public EntitySet<Feedback> Feedbacks
		{
			get
			{
				return this._Feedbacks;
			}
			set
			{
				this._Feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Order_Table", Storage="_Order_Tables", ThisKey="User_Id", OtherKey="Client_User_Id")]
		public EntitySet<Order_Table> Order_Tables
		{
			get
			{
				return this._Order_Tables;
			}
			set
			{
				this._Order_Tables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Feedbacks(Feedback entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_Order_Tables(Order_Table entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Order_Tables(Order_Table entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_Size")]
	public partial class Product_Size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Size_Id;
		
		private int _Product_Id;
		
		private EntityRef<Size_Table> _Size_Table;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSize_IdChanging(int value);
    partial void OnSize_IdChanged();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    #endregion
		
		public Product_Size()
		{
			this._Size_Table = default(EntityRef<Size_Table>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Size_Id
		{
			get
			{
				return this._Size_Id;
			}
			set
			{
				if ((this._Size_Id != value))
				{
					if (this._Size_Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSize_IdChanging(value);
					this.SendPropertyChanging();
					this._Size_Id = value;
					this.SendPropertyChanged("Size_Id");
					this.OnSize_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL")]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_Table_Product_Size", Storage="_Size_Table", ThisKey="Size_Id", OtherKey="Size_Id", IsForeignKey=true)]
		public Size_Table Size_Table
		{
			get
			{
				return this._Size_Table.Entity;
			}
			set
			{
				Size_Table previousValue = this._Size_Table.Entity;
				if (((previousValue != value) 
							|| (this._Size_Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Size_Table.Entity = null;
						previousValue.Product_Size = null;
					}
					this._Size_Table.Entity = value;
					if ((value != null))
					{
						value.Product_Size = this;
						this._Size_Id = value.Size_Id;
					}
					else
					{
						this._Size_Id = default(int);
					}
					this.SendPropertyChanged("Size_Table");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Size", Storage="_Product", ThisKey="Product_Id", OtherKey="Product_Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Product_Sizes.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Product_Sizes.Add(this);
						this._Product_Id = value.Product_Id;
					}
					else
					{
						this._Product_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Size_Table")]
	public partial class Size_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Size_Id;
		
		private string _Name;
		
		private string _Dimensions;
		
		private EntityRef<Product_Size> _Product_Size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSize_IdChanging(int value);
    partial void OnSize_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDimensionsChanging(string value);
    partial void OnDimensionsChanged();
    #endregion
		
		public Size_Table()
		{
			this._Product_Size = default(EntityRef<Product_Size>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Size_Id
		{
			get
			{
				return this._Size_Id;
			}
			set
			{
				if ((this._Size_Id != value))
				{
					this.OnSize_IdChanging(value);
					this.SendPropertyChanging();
					this._Size_Id = value;
					this.SendPropertyChanged("Size_Id");
					this.OnSize_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensions", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Dimensions
		{
			get
			{
				return this._Dimensions;
			}
			set
			{
				if ((this._Dimensions != value))
				{
					this.OnDimensionsChanging(value);
					this.SendPropertyChanging();
					this._Dimensions = value;
					this.SendPropertyChanged("Dimensions");
					this.OnDimensionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_Table_Product_Size", Storage="_Product_Size", ThisKey="Size_Id", OtherKey="Size_Id", IsUnique=true, IsForeignKey=false)]
		public Product_Size Product_Size
		{
			get
			{
				return this._Product_Size.Entity;
			}
			set
			{
				Product_Size previousValue = this._Product_Size.Entity;
				if (((previousValue != value) 
							|| (this._Product_Size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product_Size.Entity = null;
						previousValue.Size_Table = null;
					}
					this._Product_Size.Entity = value;
					if ((value != null))
					{
						value.Size_Table = this;
					}
					this.SendPropertyChanged("Product_Size");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custom_Product")]
	public partial class Custom_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_Id;
		
		private int _Filter;
		
		private string _Custom_Size;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    partial void OnFilterChanging(int value);
    partial void OnFilterChanged();
    partial void OnCustom_SizeChanging(string value);
    partial void OnCustom_SizeChanged();
    #endregion
		
		public Custom_Product()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filter", DbType="Int NOT NULL")]
		public int Filter
		{
			get
			{
				return this._Filter;
			}
			set
			{
				if ((this._Filter != value))
				{
					this.OnFilterChanging(value);
					this.SendPropertyChanging();
					this._Filter = value;
					this.SendPropertyChanged("Filter");
					this.OnFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Custom_Size", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Custom_Size
		{
			get
			{
				return this._Custom_Size;
			}
			set
			{
				if ((this._Custom_Size != value))
				{
					this.OnCustom_SizeChanging(value);
					this.SendPropertyChanging();
					this._Custom_Size = value;
					this.SendPropertyChanged("Custom_Size");
					this.OnCustom_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Custom_Product", Storage="_Product", ThisKey="Product_Id", OtherKey="Product_Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Custom_Product = null;
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Custom_Product = this;
						this._Product_Id = value.Product_Id;
					}
					else
					{
						this._Product_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donation")]
	public partial class Donation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Organization_Name;
		
		private int _Quantity;
		
		private int _Product_Id;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrganization_NameChanging(string value);
    partial void OnOrganization_NameChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    #endregion
		
		public Donation()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Organization_Name
		{
			get
			{
				return this._Organization_Name;
			}
			set
			{
				if ((this._Organization_Name != value))
				{
					this.OnOrganization_NameChanging(value);
					this.SendPropertyChanging();
					this._Organization_Name = value;
					this.SendPropertyChanged("Organization_Name");
					this.OnOrganization_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL")]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Donation", Storage="_Product", ThisKey="Product_Id", OtherKey="Product_Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Donations.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Donations.Add(this);
						this._Product_Id = value.Product_Id;
					}
					else
					{
						this._Product_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Item")]
	public partial class Order_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Item_Id;
		
		private int _Quantity;
		
		private int _Order_Id;
		
		private int _Product_Id;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Order_Table> _Order_Table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_Item_IdChanging(int value);
    partial void OnOrder_Item_IdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnOrder_IdChanging(int value);
    partial void OnOrder_IdChanged();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    #endregion
		
		public Order_Item()
		{
			this._Product = default(EntityRef<Product>);
			this._Order_Table = default(EntityRef<Order_Table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Item_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Item_Id
		{
			get
			{
				return this._Order_Item_Id;
			}
			set
			{
				if ((this._Order_Item_Id != value))
				{
					this.OnOrder_Item_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Item_Id = value;
					this.SendPropertyChanged("Order_Item_Id");
					this.OnOrder_Item_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Id", DbType="Int NOT NULL")]
		public int Order_Id
		{
			get
			{
				return this._Order_Id;
			}
			set
			{
				if ((this._Order_Id != value))
				{
					if (this._Order_Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Id = value;
					this.SendPropertyChanged("Order_Id");
					this.OnOrder_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int NOT NULL")]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order_Item", Storage="_Product", ThisKey="Product_Id", OtherKey="Product_Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Order_Items.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Order_Items.Add(this);
						this._Product_Id = value.Product_Id;
					}
					else
					{
						this._Product_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Table_Order_Item", Storage="_Order_Table", ThisKey="Order_Id", OtherKey="Order_Id", IsForeignKey=true)]
		public Order_Table Order_Table
		{
			get
			{
				return this._Order_Table.Entity;
			}
			set
			{
				Order_Table previousValue = this._Order_Table.Entity;
				if (((previousValue != value) 
							|| (this._Order_Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order_Table.Entity = null;
						previousValue.Order_Items.Remove(this);
					}
					this._Order_Table.Entity = value;
					if ((value != null))
					{
						value.Order_Items.Add(this);
						this._Order_Id = value.Order_Id;
					}
					else
					{
						this._Order_Id = default(int);
					}
					this.SendPropertyChanged("Order_Table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Feedback_Id;
		
		private string _Description;
		
		private int _Client_User_Id;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedback_IdChanging(int value);
    partial void OnFeedback_IdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnClient_User_IdChanging(int value);
    partial void OnClient_User_IdChanged();
    #endregion
		
		public Feedback()
		{
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Feedback_Id
		{
			get
			{
				return this._Feedback_Id;
			}
			set
			{
				if ((this._Feedback_Id != value))
				{
					this.OnFeedback_IdChanging(value);
					this.SendPropertyChanging();
					this._Feedback_Id = value;
					this.SendPropertyChanged("Feedback_Id");
					this.OnFeedback_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Client.User_Id]", Storage="_Client_User_Id", DbType="Int NOT NULL")]
		public int Client_User_Id
		{
			get
			{
				return this._Client_User_Id;
			}
			set
			{
				if ((this._Client_User_Id != value))
				{
					this.OnClient_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Client_User_Id = value;
					this.SendPropertyChanged("Client_User_Id");
					this.OnClient_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Feedback", Storage="_Client", ThisKey="Client_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Feedbacks.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Feedbacks.Add(this);
						this._Client_User_Id = value.User_Id;
					}
					else
					{
						this._Client_User_Id = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mask_Type")]
	public partial class Mask_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mask_Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _Date_Created;
		
		private int _Admin_User_Id;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMask_IdChanging(int value);
    partial void OnMask_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDate_CreatedChanging(System.DateTime value);
    partial void OnDate_CreatedChanged();
    partial void OnAdmin_User_IdChanging(int value);
    partial void OnAdmin_User_IdChanged();
    #endregion
		
		public Mask_Type()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mask_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mask_Id
		{
			get
			{
				return this._Mask_Id;
			}
			set
			{
				if ((this._Mask_Id != value))
				{
					this.OnMask_IdChanging(value);
					this.SendPropertyChanging();
					this._Mask_Id = value;
					this.SendPropertyChanged("Mask_Id");
					this.OnMask_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Created
		{
			get
			{
				return this._Date_Created;
			}
			set
			{
				if ((this._Date_Created != value))
				{
					this.OnDate_CreatedChanging(value);
					this.SendPropertyChanging();
					this._Date_Created = value;
					this.SendPropertyChanged("Date_Created");
					this.OnDate_CreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Admin.User_Id]", Storage="_Admin_User_Id", DbType="Int NOT NULL")]
		public int Admin_User_Id
		{
			get
			{
				return this._Admin_User_Id;
			}
			set
			{
				if ((this._Admin_User_Id != value))
				{
					this.OnAdmin_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Admin_User_Id = value;
					this.SendPropertyChanged("Admin_User_Id");
					this.OnAdmin_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mask_Type_Product", Storage="_Products", ThisKey="Mask_Id", OtherKey="Mask_Id")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Mask_Type", Storage="_Admin", ThisKey="Admin_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.Mask_Types.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.Mask_Types.Add(this);
						this._Admin_User_Id = value.User_Id;
					}
					else
					{
						this._Admin_User_Id = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Mask_Type = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Mask_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_Id;
		
		private string _Name;
		
		private string _Description;
		
		private decimal _Unit_Price;
		
		private int _Active;
		
		private System.DateTime _Date_Created;
		
		private int _Mask_Id;
		
		private int _Admin_User_Id;
		
		private EntitySet<Product_Size> _Product_Sizes;
		
		private EntityRef<Custom_Product> _Custom_Product;
		
		private EntitySet<Donation> _Donations;
		
		private EntitySet<Order_Item> _Order_Items;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<Mask_Type> _Mask_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnit_PriceChanging(decimal value);
    partial void OnUnit_PriceChanged();
    partial void OnActiveChanging(int value);
    partial void OnActiveChanged();
    partial void OnDate_CreatedChanging(System.DateTime value);
    partial void OnDate_CreatedChanged();
    partial void OnMask_IdChanging(int value);
    partial void OnMask_IdChanged();
    partial void OnAdmin_User_IdChanging(int value);
    partial void OnAdmin_User_IdChanged();
    #endregion
		
		public Product()
		{
			this._Product_Sizes = new EntitySet<Product_Size>(new Action<Product_Size>(this.attach_Product_Sizes), new Action<Product_Size>(this.detach_Product_Sizes));
			this._Custom_Product = default(EntityRef<Custom_Product>);
			this._Donations = new EntitySet<Donation>(new Action<Donation>(this.attach_Donations), new Action<Donation>(this.detach_Donations));
			this._Order_Items = new EntitySet<Order_Item>(new Action<Order_Item>(this.attach_Order_Items), new Action<Order_Item>(this.detach_Order_Items));
			this._Admin = default(EntityRef<Admin>);
			this._Mask_Type = default(EntityRef<Mask_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Price", DbType="Money NOT NULL")]
		public decimal Unit_Price
		{
			get
			{
				return this._Unit_Price;
			}
			set
			{
				if ((this._Unit_Price != value))
				{
					this.OnUnit_PriceChanging(value);
					this.SendPropertyChanging();
					this._Unit_Price = value;
					this.SendPropertyChanged("Unit_Price");
					this.OnUnit_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Created
		{
			get
			{
				return this._Date_Created;
			}
			set
			{
				if ((this._Date_Created != value))
				{
					this.OnDate_CreatedChanging(value);
					this.SendPropertyChanging();
					this._Date_Created = value;
					this.SendPropertyChanged("Date_Created");
					this.OnDate_CreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mask_Id", DbType="Int NOT NULL")]
		public int Mask_Id
		{
			get
			{
				return this._Mask_Id;
			}
			set
			{
				if ((this._Mask_Id != value))
				{
					if (this._Mask_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMask_IdChanging(value);
					this.SendPropertyChanging();
					this._Mask_Id = value;
					this.SendPropertyChanged("Mask_Id");
					this.OnMask_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Admin.User_Id]", Storage="_Admin_User_Id", DbType="Int NOT NULL")]
		public int Admin_User_Id
		{
			get
			{
				return this._Admin_User_Id;
			}
			set
			{
				if ((this._Admin_User_Id != value))
				{
					this.OnAdmin_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Admin_User_Id = value;
					this.SendPropertyChanged("Admin_User_Id");
					this.OnAdmin_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Size", Storage="_Product_Sizes", ThisKey="Product_Id", OtherKey="Product_Id")]
		public EntitySet<Product_Size> Product_Sizes
		{
			get
			{
				return this._Product_Sizes;
			}
			set
			{
				this._Product_Sizes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Custom_Product", Storage="_Custom_Product", ThisKey="Product_Id", OtherKey="Product_Id", IsUnique=true, IsForeignKey=false)]
		public Custom_Product Custom_Product
		{
			get
			{
				return this._Custom_Product.Entity;
			}
			set
			{
				Custom_Product previousValue = this._Custom_Product.Entity;
				if (((previousValue != value) 
							|| (this._Custom_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Custom_Product.Entity = null;
						previousValue.Product = null;
					}
					this._Custom_Product.Entity = value;
					if ((value != null))
					{
						value.Product = this;
					}
					this.SendPropertyChanged("Custom_Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Donation", Storage="_Donations", ThisKey="Product_Id", OtherKey="Product_Id")]
		public EntitySet<Donation> Donations
		{
			get
			{
				return this._Donations;
			}
			set
			{
				this._Donations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Order_Item", Storage="_Order_Items", ThisKey="Product_Id", OtherKey="Product_Id")]
		public EntitySet<Order_Item> Order_Items
		{
			get
			{
				return this._Order_Items;
			}
			set
			{
				this._Order_Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Product", Storage="_Admin", ThisKey="Admin_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Admin_User_Id = value.User_Id;
					}
					else
					{
						this._Admin_User_Id = default(int);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mask_Type_Product", Storage="_Mask_Type", ThisKey="Mask_Id", OtherKey="Mask_Id", IsForeignKey=true)]
		public Mask_Type Mask_Type
		{
			get
			{
				return this._Mask_Type.Entity;
			}
			set
			{
				Mask_Type previousValue = this._Mask_Type.Entity;
				if (((previousValue != value) 
							|| (this._Mask_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mask_Type.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Mask_Type.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Mask_Id = value.Mask_Id;
					}
					else
					{
						this._Mask_Id = default(int);
					}
					this.SendPropertyChanged("Mask_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product_Sizes(Product_Size entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Product_Sizes(Product_Size entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Order_Items(Order_Item entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Order_Items(Order_Item entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_Table")]
	public partial class Order_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_Id;
		
		private string _Payment_Types;
		
		private System.DateTime _Order_date;
		
		private decimal _Order_Total;
		
		private string _Order_Session;
		
		private string _Order_Status;
		
		private decimal _Order_Tax;
		
		private decimal _Order_Discount;
		
		private decimal _Order_Shipping;
		
		private int _Client_User_Id;
		
		private int _Delivery_Id;
		
		private EntitySet<Order_Item> _Order_Items;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<Delivery> _Delivery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_IdChanging(int value);
    partial void OnOrder_IdChanged();
    partial void OnPayment_TypesChanging(string value);
    partial void OnPayment_TypesChanged();
    partial void OnOrder_dateChanging(System.DateTime value);
    partial void OnOrder_dateChanged();
    partial void OnOrder_TotalChanging(decimal value);
    partial void OnOrder_TotalChanged();
    partial void OnOrder_SessionChanging(string value);
    partial void OnOrder_SessionChanged();
    partial void OnOrder_StatusChanging(string value);
    partial void OnOrder_StatusChanged();
    partial void OnOrder_TaxChanging(decimal value);
    partial void OnOrder_TaxChanged();
    partial void OnOrder_DiscountChanging(decimal value);
    partial void OnOrder_DiscountChanged();
    partial void OnOrder_ShippingChanging(decimal value);
    partial void OnOrder_ShippingChanged();
    partial void OnClient_User_IdChanging(int value);
    partial void OnClient_User_IdChanged();
    partial void OnDelivery_IdChanging(int value);
    partial void OnDelivery_IdChanged();
    #endregion
		
		public Order_Table()
		{
			this._Order_Items = new EntitySet<Order_Item>(new Action<Order_Item>(this.attach_Order_Items), new Action<Order_Item>(this.detach_Order_Items));
			this._Client = default(EntityRef<Client>);
			this._Delivery = default(EntityRef<Delivery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_Id
		{
			get
			{
				return this._Order_Id;
			}
			set
			{
				if ((this._Order_Id != value))
				{
					this.OnOrder_IdChanging(value);
					this.SendPropertyChanging();
					this._Order_Id = value;
					this.SendPropertyChanged("Order_Id");
					this.OnOrder_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment_Types", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Payment_Types
		{
			get
			{
				return this._Payment_Types;
			}
			set
			{
				if ((this._Payment_Types != value))
				{
					this.OnPayment_TypesChanging(value);
					this.SendPropertyChanging();
					this._Payment_Types = value;
					this.SendPropertyChanged("Payment_Types");
					this.OnPayment_TypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_date", DbType="DateTime NOT NULL")]
		public System.DateTime Order_date
		{
			get
			{
				return this._Order_date;
			}
			set
			{
				if ((this._Order_date != value))
				{
					this.OnOrder_dateChanging(value);
					this.SendPropertyChanging();
					this._Order_date = value;
					this.SendPropertyChanged("Order_date");
					this.OnOrder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Total", DbType="Money NOT NULL")]
		public decimal Order_Total
		{
			get
			{
				return this._Order_Total;
			}
			set
			{
				if ((this._Order_Total != value))
				{
					this.OnOrder_TotalChanging(value);
					this.SendPropertyChanging();
					this._Order_Total = value;
					this.SendPropertyChanged("Order_Total");
					this.OnOrder_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Session", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Order_Session
		{
			get
			{
				return this._Order_Session;
			}
			set
			{
				if ((this._Order_Session != value))
				{
					this.OnOrder_SessionChanging(value);
					this.SendPropertyChanging();
					this._Order_Session = value;
					this.SendPropertyChanged("Order_Session");
					this.OnOrder_SessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Order_Status
		{
			get
			{
				return this._Order_Status;
			}
			set
			{
				if ((this._Order_Status != value))
				{
					this.OnOrder_StatusChanging(value);
					this.SendPropertyChanging();
					this._Order_Status = value;
					this.SendPropertyChanged("Order_Status");
					this.OnOrder_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Tax", DbType="Money NOT NULL")]
		public decimal Order_Tax
		{
			get
			{
				return this._Order_Tax;
			}
			set
			{
				if ((this._Order_Tax != value))
				{
					this.OnOrder_TaxChanging(value);
					this.SendPropertyChanging();
					this._Order_Tax = value;
					this.SendPropertyChanged("Order_Tax");
					this.OnOrder_TaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Discount", DbType="Money NOT NULL")]
		public decimal Order_Discount
		{
			get
			{
				return this._Order_Discount;
			}
			set
			{
				if ((this._Order_Discount != value))
				{
					this.OnOrder_DiscountChanging(value);
					this.SendPropertyChanging();
					this._Order_Discount = value;
					this.SendPropertyChanged("Order_Discount");
					this.OnOrder_DiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Shipping", DbType="Money NOT NULL")]
		public decimal Order_Shipping
		{
			get
			{
				return this._Order_Shipping;
			}
			set
			{
				if ((this._Order_Shipping != value))
				{
					this.OnOrder_ShippingChanging(value);
					this.SendPropertyChanging();
					this._Order_Shipping = value;
					this.SendPropertyChanged("Order_Shipping");
					this.OnOrder_ShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Client.User_Id]", Storage="_Client_User_Id", DbType="Int NOT NULL")]
		public int Client_User_Id
		{
			get
			{
				return this._Client_User_Id;
			}
			set
			{
				if ((this._Client_User_Id != value))
				{
					this.OnClient_User_IdChanging(value);
					this.SendPropertyChanging();
					this._Client_User_Id = value;
					this.SendPropertyChanged("Client_User_Id");
					this.OnClient_User_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery_Id", DbType="Int NOT NULL")]
		public int Delivery_Id
		{
			get
			{
				return this._Delivery_Id;
			}
			set
			{
				if ((this._Delivery_Id != value))
				{
					if (this._Delivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDelivery_IdChanging(value);
					this.SendPropertyChanging();
					this._Delivery_Id = value;
					this.SendPropertyChanged("Delivery_Id");
					this.OnDelivery_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Table_Order_Item", Storage="_Order_Items", ThisKey="Order_Id", OtherKey="Order_Id")]
		public EntitySet<Order_Item> Order_Items
		{
			get
			{
				return this._Order_Items;
			}
			set
			{
				this._Order_Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Order_Table", Storage="_Client", ThisKey="Client_User_Id", OtherKey="User_Id", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Order_Tables.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Order_Tables.Add(this);
						this._Client_User_Id = value.User_Id;
					}
					else
					{
						this._Client_User_Id = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delivery_Order_Table", Storage="_Delivery", ThisKey="Delivery_Id", OtherKey="Delivery_Id", IsForeignKey=true)]
		public Delivery Delivery
		{
			get
			{
				return this._Delivery.Entity;
			}
			set
			{
				Delivery previousValue = this._Delivery.Entity;
				if (((previousValue != value) 
							|| (this._Delivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Delivery.Entity = null;
						previousValue.Order_Tables.Remove(this);
					}
					this._Delivery.Entity = value;
					if ((value != null))
					{
						value.Order_Tables.Add(this);
						this._Delivery_Id = value.Delivery_Id;
					}
					else
					{
						this._Delivery_Id = default(int);
					}
					this.SendPropertyChanged("Delivery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Items(Order_Item entity)
		{
			this.SendPropertyChanging();
			entity.Order_Table = this;
		}
		
		private void detach_Order_Items(Order_Item entity)
		{
			this.SendPropertyChanging();
			entity.Order_Table = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Delivery")]
	public partial class Delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Delivery_Id;
		
		private string _Name;
		
		private System.DateTime _Pickup_Time;
		
		private System.DateTime _Delivered_Time;
		
		private EntitySet<Order_Table> _Order_Tables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDelivery_IdChanging(int value);
    partial void OnDelivery_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPickup_TimeChanging(System.DateTime value);
    partial void OnPickup_TimeChanged();
    partial void OnDelivered_TimeChanging(System.DateTime value);
    partial void OnDelivered_TimeChanged();
    #endregion
		
		public Delivery()
		{
			this._Order_Tables = new EntitySet<Order_Table>(new Action<Order_Table>(this.attach_Order_Tables), new Action<Order_Table>(this.detach_Order_Tables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Delivery_Id
		{
			get
			{
				return this._Delivery_Id;
			}
			set
			{
				if ((this._Delivery_Id != value))
				{
					this.OnDelivery_IdChanging(value);
					this.SendPropertyChanging();
					this._Delivery_Id = value;
					this.SendPropertyChanged("Delivery_Id");
					this.OnDelivery_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pickup_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Pickup_Time
		{
			get
			{
				return this._Pickup_Time;
			}
			set
			{
				if ((this._Pickup_Time != value))
				{
					this.OnPickup_TimeChanging(value);
					this.SendPropertyChanging();
					this._Pickup_Time = value;
					this.SendPropertyChanged("Pickup_Time");
					this.OnPickup_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivered_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Delivered_Time
		{
			get
			{
				return this._Delivered_Time;
			}
			set
			{
				if ((this._Delivered_Time != value))
				{
					this.OnDelivered_TimeChanging(value);
					this.SendPropertyChanging();
					this._Delivered_Time = value;
					this.SendPropertyChanged("Delivered_Time");
					this.OnDelivered_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delivery_Order_Table", Storage="_Order_Tables", ThisKey="Delivery_Id", OtherKey="Delivery_Id")]
		public EntitySet<Order_Table> Order_Tables
		{
			get
			{
				return this._Order_Tables;
			}
			set
			{
				this._Order_Tables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order_Tables(Order_Table entity)
		{
			this.SendPropertyChanging();
			entity.Delivery = this;
		}
		
		private void detach_Order_Tables(Order_Table entity)
		{
			this.SendPropertyChanging();
			entity.Delivery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Table")]
	public partial class User_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Usertype;
		
		private string _Name;
		
		private string _Email;
		
		private string _Contact_Number;
		
		private System.DateTime _Date_Created;
		
		private int _Active;
		
		private string _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUsertypeChanging(string value);
    partial void OnUsertypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContact_NumberChanging(string value);
    partial void OnContact_NumberChanged();
    partial void OnDate_CreatedChanging(System.DateTime value);
    partial void OnDate_CreatedChanged();
    partial void OnActiveChanging(int value);
    partial void OnActiveChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public User_Table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usertype", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Usertype
		{
			get
			{
				return this._Usertype;
			}
			set
			{
				if ((this._Usertype != value))
				{
					this.OnUsertypeChanging(value);
					this.SendPropertyChanging();
					this._Usertype = value;
					this.SendPropertyChanged("Usertype");
					this.OnUsertypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Number", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Contact_Number
		{
			get
			{
				return this._Contact_Number;
			}
			set
			{
				if ((this._Contact_Number != value))
				{
					this.OnContact_NumberChanging(value);
					this.SendPropertyChanging();
					this._Contact_Number = value;
					this.SendPropertyChanged("Contact_Number");
					this.OnContact_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Created
		{
			get
			{
				return this._Date_Created;
			}
			set
			{
				if ((this._Date_Created != value))
				{
					this.OnDate_CreatedChanging(value);
					this.SendPropertyChanging();
					this._Date_Created = value;
					this.SendPropertyChanged("Date_Created");
					this.OnDate_CreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
